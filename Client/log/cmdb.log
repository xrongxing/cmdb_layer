发送时间: 2018-12-27 09:51:54 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: 发送失败发送时间: 2018-12-27 10:02:58 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: 发送失败发送时间: 2018-12-27 11:16:09 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: 发送失败发送时间: 2018-12-27 11:23:17 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: 发送失败发送时间: 2018-12-27 11:23:25 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: 发送失败发送时间: 2018-12-27 11:30:36 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>403 Forbidden</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background:#eee; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 span { font-size:60%; color:#666; font-weight:normal; }
    #info { background:#f6f6f6; }
    #info ul { margin: 0.5em 4em; }
    #info p, #summary p { padding-top:10px; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
  </style>
</head>
<body>
<div id="summary">
  <h1>禁止访问 <span>(403)</span></h1>
  <p>CSRF验证失败. 请求被中断.</p>


  <p>您看到此消息是由于该站点在提交表单时需要一个CSRF cookie。此项是出于安全考虑，以确保您的浏览器没有被第三方劫持。</p>
  <p>如果您已经设置浏览器禁用cookies，请重新启用，至少针对这个站点，全部HTTPS请求，或者同源请求（same-origin）启用cookies。</p>

</div>

<div id="info">
  <h2>Help</h2>
    
    <p>Reason given for failure:</p>
    <pre>
    CSRF cookie not set.
    </pre>
    

  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when
  <a
  href="https://docs.djangoproject.com/en/1.11/ref/csrf/">Django's
  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to
  ensure:</p>

  <ul>
    <li>Your browser is accepting cookies.</li>

    <li>The view function passes a <code>request</code> to the template's <a
    href="https://docs.djangoproject.com/en/dev/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a>
    method.</li>

    <li>In the template, there is a <code>{% csrf_token
    %}</code> template tag inside each POST form that
    targets an internal URL.</li>

    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use
    <code>csrf_protect</code> on any views that use the <code>csrf_token</code>
    template tag, as well as those that accept the POST data.</li>

    <li>The form has a valid CSRF token. After logging in in another browser
    tab or hitting the back button after a login, you may need to reload the
    page with the form, because the token is rotated after a login.</li>
  </ul>

  <p>You're seeing the help section of this page because you have <code>DEBUG =
  True</code> in your Django settings file. Change that to <code>False</code>,
  and only the initial error message will be displayed.  </p>

  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p>
</div>

</body>
</html>
发送时间: 2018-12-27 11:32:00 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>403 Forbidden</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background:#eee; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 span { font-size:60%; color:#666; font-weight:normal; }
    #info { background:#f6f6f6; }
    #info ul { margin: 0.5em 4em; }
    #info p, #summary p { padding-top:10px; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
  </style>
</head>
<body>
<div id="summary">
  <h1>禁止访问 <span>(403)</span></h1>
  <p>CSRF验证失败. 请求被中断.</p>


  <p>您看到此消息是由于该站点在提交表单时需要一个CSRF cookie。此项是出于安全考虑，以确保您的浏览器没有被第三方劫持。</p>
  <p>如果您已经设置浏览器禁用cookies，请重新启用，至少针对这个站点，全部HTTPS请求，或者同源请求（same-origin）启用cookies。</p>

</div>

<div id="info">
  <h2>Help</h2>
    
    <p>Reason given for failure:</p>
    <pre>
    CSRF cookie not set.
    </pre>
    

  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when
  <a
  href="https://docs.djangoproject.com/en/1.11/ref/csrf/">Django's
  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to
  ensure:</p>

  <ul>
    <li>Your browser is accepting cookies.</li>

    <li>The view function passes a <code>request</code> to the template's <a
    href="https://docs.djangoproject.com/en/dev/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a>
    method.</li>

    <li>In the template, there is a <code>{% csrf_token
    %}</code> template tag inside each POST form that
    targets an internal URL.</li>

    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use
    <code>csrf_protect</code> on any views that use the <code>csrf_token</code>
    template tag, as well as those that accept the POST data.</li>

    <li>The form has a valid CSRF token. After logging in in another browser
    tab or hitting the back button after a login, you may need to reload the
    page with the form, because the token is rotated after a login.</li>
  </ul>

  <p>You're seeing the help section of this page because you have <code>DEBUG =
  True</code> in your Django settings file. Change that to <code>False</code>,
  and only the initial error message will be displayed.  </p>

  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p>
</div>

</body>
</html>
发送时间: 2018-12-27 11:32:56 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: 发送失败发送时间: 2018-12-27 11:34:04 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK发送时间: 2018-12-27 11:34:58 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK发送时间: 2018-12-27 11:36:41 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 11:37:07 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 11:37:08 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 11:37:08 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 16:54:08 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 16:57:41 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:03:08 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:03:16 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:03:46 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:03:51 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:04:04 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:05:24 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:13:44 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:14:50 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:15:22 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:16:05 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:16:23 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:17:54 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:18:00 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:24:37 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:32:05 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:32:13 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
发送时间: 2018-12-27 17:33:11 	 服务器地址: http://192.168.1.209:58014/assets/report/ 	 返回结果: OK 
